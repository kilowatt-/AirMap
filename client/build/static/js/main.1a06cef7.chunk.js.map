{"version":3,"sources":["serviceWorker.js","components/Header.jsx","controller/actions.js","components/MainMap.jsx","components/RouteDetailTable.jsx","components/AirportDetails.jsx","components/Content.jsx","components/Footer.jsx","components/App.jsx","airportMap.js","controller/reducer.js","index.js"],"names":["Boolean","window","location","hostname","match","Header","props","Navbar","bg","variant","expand","sticky","Brand","href","setActiveAirport","airport","type","payload","L","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","position","MainMap","state","zoom","loading","visibleAirports","visibleRoutes","vL","rL","MIN_ZOOM","mapRef","React","handlePositionChange","bind","updateVisibleAirportsOnMap","renderCircle","renderActiveAirport","unsetActiveAirport","renderMarkers","handleZoomChange","drawLines","script","document","createElement","src","async","body","appendChild","prevProps","prevState","snapshot","activeAirport","this","routes","leafletElement","getCenter","setState","getZoom","calculateRL","bounds","getBounds","sw","_southWest","ne","_northEast","source","airportDepartureData","elem","lng","coordinates","lat","push","length","Departures","sourceLng","sourceLat","colours","lines","i","waypoints","options","weight","opacity","color","line","positions","representsRoute","vC","circleRatio","radius","Math","pow","flagUrl","process","State","toLowerCase","CircleMarker","center","key","Airport","onClick","e","DomEvent","stopPropagation","onMouseOver","target","openPopup","onMouseOut","closePopup","Popup","closeButton","alt","AirportName","iata","flyTo","duration","Marker","map","concat","onZoomEnd","ref","m","onMoveEnd","whenReady","maxBounds","worldCopyJump","TileLayer","minZoom","detectRetina","maxZoom","attribution","url","connect","dispatch","RouteDetailTable","getRouteData","fetchingData","Spinner","animation","role","className","fetchingDataErr","style","align","Table","striped","bordered","hover","size","responsive","index","toLocaleString","undefined","airportCode","a","axios","get","res","data","response","status","errMsg","AirportDetails","renderAirportDetails","wordBreak","Container","Row","Col","width","height","Name","city","paddingLeft","International","Domestic","marginTop","alignContent","Content","fluid","paddingRight","marginRight","overflowY","xs","xl","marginLeft","Footer","Text","App","flex","flexDirection","airportMap","Map","set","getAirportMap","initialState","processData","routesMap","arrivalAirport","estArrivalAirport","has","count","iterator","Symbol","item","object","fullAirport","Object","assign","departures","sort","b","store","createStore","action","applyMiddleware","thunk","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"8IAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,4CCTSC,EANA,SAACC,GACZ,OAAQ,kBAACC,EAAA,EAAD,CAAQC,GAAG,OAAOC,QAAQ,OAAOC,OAAO,KAAKC,OAAQ,OACzD,kBAACJ,EAAA,EAAOK,MAAR,CAAcC,KAAK,QAAQL,GAAG,SAA9B,Y,iJCID,SAASM,EAAiBC,GAC7B,MAAO,CACHC,KAT0B,qBAU1BC,QAASF,G,2CCFVG,IAAEC,KAAKC,QAAQC,UAAUC,YAEhCJ,IAAEC,KAAKC,QAAQG,aAAa,CACxBC,cAAeC,EAAQ,KACvBC,QAASD,EAAQ,KACjBE,UAAWF,EAAQ,OAGvB,IAMMG,EAAW,CAAC,EAAG,GAEfC,E,kDAEF,WAAYvB,GAAQ,IAAD,8BACf,cAAMA,IAEDwB,MAAQ,CACTC,KAdK,EAeLH,WACAI,SAAS,EACTC,gBAAiB,GACjBC,cAAe,GACfC,GAAI,EACJC,GAAIC,IAGR,EAAKC,OAASC,cACd,EAAKC,qBAAuB,EAAKA,qBAAqBC,KAA1B,gBAC5B,EAAKC,2BAA6B,EAAKA,2BAA2BD,KAAhC,gBAClC,EAAKE,aAAe,EAAKA,aAAaF,KAAlB,gBACpB,EAAKG,oBAAsB,EAAKA,oBAAoBH,KAAzB,gBAC3B,EAAKI,mBAAqB,EAAKA,mBAAmBJ,KAAxB,gBAC1B,EAAKK,cAAgB,EAAKA,cAAcL,KAAnB,gBACrB,EAAKM,iBAAmB,EAAKA,iBAAiBN,KAAtB,gBACxB,EAAKO,UAAY,EAAKA,UAAUP,KAAf,gBArBF,E,gEAyBf,IAAMQ,EAASC,SAASC,cAAc,UAEtCF,EAAOG,IAAM,gDACbH,EAAOI,OAAQ,EAEfH,SAASI,KAAKC,YAAYN,K,yCAGXO,EAAWC,EAAWC,IAChCF,EAAUG,gBAAkBC,KAAKtD,MAAMqD,eAAmBC,KAAKtD,MAAMqD,eAAiBH,EAAUK,SAAWD,KAAKtD,MAAMuD,SACvHD,KAAKlB,+B,6CAKT,GAAIkB,KAAKtB,OAAQ,CACb,IAAIV,EAAWgC,KAAKtB,OAAOwB,eAAeC,YAE1CH,KAAKI,SAAS,CAAEpC,aAEhBgC,KAAKlB,gC,yCAKT,IAAIX,EAAO6B,KAAKtB,OAAOwB,eAAeG,UAClC7B,EAAKwB,KAAKM,YAAYnC,GAE1B6B,KAAKI,SAAS,CAACjC,OAAMK,S,mDAIrB,IAAI+B,EAASP,KAAKtB,OAAOwB,eAAeM,YACpCC,EAAKF,EAAOG,WACZC,EAAKJ,EAAOK,WAEZvC,EAAkB,GAClBwC,EAAUb,KAAKtD,MAAMqD,cAAiBC,KAAKtD,MAAMuD,OAASa,EAE9D,GAAID,EAAQ,CAAC,IAAD,gBACSA,GADT,IACR,2BAAyB,CAAC,IAAjBE,EAAgB,QAEjBC,EAAMD,EAAKE,YAAY,GACvBC,EAAMH,EAAKE,YAAY,GAM3B,GAJIC,GAAOT,EAAGS,KAAOA,GAAOP,EAAGO,KAAOF,GAAOP,EAAGO,KAAOA,GAAOL,EAAGK,KAC7D3C,EAAgB8C,KAAKJ,IAGpBf,KAAKtD,MAAMqD,eAhFV,KAgF2B1B,EAAgB+C,OAC7C,OAXA,8BAeR,IAAI7C,EAAK,EACLF,EAAgB+C,OAAS,IACzB7C,EAAKF,EAAgB,GAAGgD,YAG5BrB,KAAKI,SAAU,CAAC/B,kBAAiBE,U,kCAK7BJ,GACR,OAAc,GAAPA,I,kCAWP,IAPA,IAAImD,EAAYtB,KAAKtD,MAAMqD,cAAckB,YAAY,GACjDM,EAAYvB,KAAKtD,MAAMqD,cAAckB,YAAY,GAEjDO,EAAU,CAAC,UAAW,UAAW,WAEjCC,EAAQ,GAEHC,EAAI,EAAGA,EAAI1B,KAAK9B,MAAMG,gBAAgB+C,OAAQM,IAAK,CACxD,IAAIvE,EAAU6C,KAAK9B,MAAMG,gBAAgBqD,GAErCV,EAAM7D,EAAQ8D,YAAY,GAGxBU,EAAY,CAAE,CAACJ,EAAWD,GAAY,CAFlCnE,EAAQ8D,YAAY,GAEoBD,IAE5CY,EAAU,CACZC,OAAQ,EACRC,QAAS,GACTC,MAAOP,EAAQE,EAAIF,EAAQJ,SAGzBY,EAAO,gBAAC,eAAD,CAAcC,UAAWN,EAAWC,QAASA,IAE1DH,EAAMN,KAAKa,GAGf,OAAOP,I,mCAGEtE,EAAS+E,GAAkB,IAAD,OAC7BlB,EAAM7D,EAAQ8D,YAAY,GAC1BC,EAAM/D,EAAQ8D,YAAY,GAE1BkB,EAAKhF,EAAQkE,WAJgB,EAKhBrB,KAAK9B,MAAhBM,EAL2B,EAK3BA,GAEF4D,EAAeD,EAPc,EAKvB5D,GAIN8D,EAASC,KAAKC,IAAIH,EA5IR,KA4IwC5D,EAElDgE,EAAO,UAAMC,GAAN,kBAAsCtF,EAAQuF,MAAMC,cAApD,QACb,OAAIT,EAEO,gBAACU,EAAA,EAAD,CAAcC,OAAQ,CAAC3B,MAAKF,OACde,MAAO,UACPe,IAAK3F,EAAQ4F,QAASV,OAAQA,EAAQW,QAAS,SAACC,GAAO3F,IAAE4F,SAASC,gBAAgBF,IAClFG,YAAa,SAACH,GACVA,EAAEI,OAAOC,aAEbC,WAAY,SAACN,GACTA,EAAEI,OAAOG,eAG9B,gBAACC,EAAA,EAAD,CAAOC,aAAa,GAAO,uBAAKlE,IAAKgD,EAASmB,IAAKxG,EAAQuF,MAAMC,gBAAjE,cAAuFxF,EAAQyG,YAA/F,aAA+GzG,EAAQ4F,QAAvH,YAAkI5F,EAAQ0G,KAA1I,eAAqJ1G,EAAQkE,cAI1J,gBAACuB,EAAA,EAAD,CAAcC,OAAQ,CAAC3B,MAAKF,OACde,MAAO,UACPe,IAAK3F,EAAQ4F,QAASV,OAAQA,EAAQW,QAAS,SAACC,GACjE,IAAMjF,EAAW,CAACkD,MAAKF,OACvB,EAAKtC,OAAOwB,eAAe4D,MAAM9F,EAAU,EAAKE,MAAMC,KAAM,CAAC4F,SAAU,MACvE,EAAKrH,MAAMQ,iBAAiBC,GAC5BG,IAAE4F,SAASC,gBAAgBF,IAC5BG,YAAa,SAACH,GACbA,EAAEI,OAAOC,aACVC,WAAY,SAACN,GACZA,EAAEI,OAAOG,eAGT,gBAACC,EAAA,EAAD,CAAOC,aAAa,GAAO,uBAAKlE,IAAKgD,EAASmB,IAAKxG,EAAQuF,MAAMC,gBAAjE,cAAuFxF,EAAQyG,YAA/F,aAA+GzG,EAAQ4F,QAAvH,YAAkI5F,EAAQ0G,KAA1I,S,4CAKW,IACZ9D,EAAiBC,KAAKtD,MAAtBqD,cACDiB,EAAMjB,EAAckB,YAAY,GAChCC,EAAMnB,EAAckB,YAAY,GAEtC,OAAO,gBAAC+C,EAAA,EAAD,CAAQhG,SAAU,CAACkD,MAAKF,OAAMgC,QAAS,SAAAC,GAAC,OAAI3F,IAAE4F,SAASC,gBAAgBF,IAAIlB,MAAO,U,2CAIrF/B,KAAKtD,MAAMqD,eACXC,KAAKtD,MAAMuC,uB,sCAIF,IAAD,OACZ,GAAIe,KAAKtD,MAAMqD,cAAe,CAC1B,GAAIC,KAAKtD,MAAMuD,OAAQ,CACnB,IAAMA,EAASD,KAAK9B,MAAMG,gBAAgB4F,KAAI,SAAC9G,GAC3C,OAAO,EAAK4B,aAAa5B,GAAS,MAEtC8C,EAAOkB,KAAKnB,KAAKhB,uBACjB,IAAIyC,EAAQzB,KAAKZ,YACjB,OAAOa,EAAOiE,OAAOzC,GAEzB,OAAOzB,KAAKhB,sBAGZ,OAAOgB,KAAK9B,MAAMG,gBAAgB4F,KAAI,SAAC9G,GACnC,OAAO,EAAK4B,aAAa5B,GAAS,Q,+BAKpC,IAAD,OACL,OACI,2BAAK,gBAAC,IAAD,CAAY6F,QAAShD,KAAKf,mBAAoBkF,UAAWnE,KAAKb,iBAAkB0D,OAAQ7C,KAAK9B,MAAMF,SAAUG,KAAM6B,KAAK9B,MAAMC,KAAMiG,IAAK,SAACC,GAAD,OAAO,EAAK3F,OAAS2F,GAClJC,UAAWtE,KAAKpB,qBAAsB2F,UAAWvE,KAAKlB,2BAA4B0F,UAAW,CAAC,EAAE,KAAM,KAAM,CAAC,IAAK,MAAOC,eAAe,GACrJ,gBAACC,EAAA,EAAD,CACIC,QAzNH,EA0NGC,cAAc,EACdC,QA1NH,GA2NGC,YAAY,8PAEZC,IAAI,8EAEP/E,KAAKd,sB,GAxNAP,aA6OPqG,eAdS,SAAC9G,GACrB,MAAO,CACH6B,cAAe7B,EAAM6B,cACrBE,OAAQ/B,EAAM+B,WAII,SAACgF,GACvB,MAAO,CACH/H,iBAAkB,SAACC,GAAD,OAAa8H,EAAS/H,EAAiBC,KACzD8B,mBAAoB,kBAAMgG,EDlPvB,CACH7H,KAf4B,6BCoQrB4H,CAA6C/G,G,iBCjQtDiH,E,kLAEElF,KAAKtD,MAAMyI,aAAanF,KAAKtD,MAAMqD,cAAcgD,W,+BAIjD,OAAI/C,KAAKtD,MAAM0I,aAEP,gBAACC,EAAA,EAAD,CAASC,UAAU,SAASC,KAAK,UAC7B,wBAAMC,UAAU,WAAhB,eAG8B,KAA/BxF,KAAKtD,MAAM+I,gBAEd,qBAAGC,MAAO,CAAC3D,MAAO,OAAQ4D,MAAO,UAAW3F,KAAKtD,MAAM+I,iBAIvD,gBAACG,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,KAAK,KAAKnJ,QAAS,OAAQoJ,YAAY,GACjE,6BACA,0BACI,+BACA,qCACA,iDAGJ,6BACCjG,KAAKtD,MAAMuD,OAASD,KAAKtD,MAAMuD,OAAOgE,KAAI,SAAC9G,EAAS+I,GACjD,IAAM1D,EAAO,UAAMC,GAAN,kBAAsCtF,EAAQuF,MAAMC,cAApD,QACb,OACI,sBAAIG,IAAKoD,GACL,0BAAKA,EAAM,GACX,0BAAI,uBAAK1G,IAAKgD,EAASmB,IAAKxG,EAAQuF,QAApC,IAA+CvF,EAAQyG,YAAvD,KAAsEzG,EAAQ0G,KAA9E,IAAqF1G,EAAQ4F,QAA7F,KACA,0BAAK5F,EAAQkE,WAAW8E,2BAG/BC,Q,GApCMzH,aA2DhBqG,eAfS,SAAC9G,GACrB,MAAO,CACH+B,OAAQ/B,EAAM+B,OACdF,cAAe7B,EAAM6B,cACrBqF,aAAclH,EAAMkH,aACpBK,gBAAiBvH,EAAMuH,oBAIL,SAACR,GACvB,MAAO,CACHE,aAAc,SAAChI,GAAD,OAAa8H,GFnBUoB,EEmB4BlJ,EFhBrE,uCAAO,WAAM8H,GAAN,mBAAAqB,EAAA,6DACHrB,EAvBG,CACH7H,KAnBwB,qBAwCrB,kBAGmBmJ,IAAMC,IAAN,UALd/D,kCAKc,YAAoB4D,IAHvC,OAGOI,EAHP,OAKCxB,EArBD,CACH7H,KAxByB,oBAyBzBC,QAmB6BoJ,EAAIC,OAL9B,gDAQK,KAAIC,UACAC,EAAS,KAAID,SAASC,OAGtBC,EADW,MAAXD,EACS,+CACS,MAAXA,EACE,6EAEA,sEAGbC,EAAS,qEAGb5B,EA/BD,CACH7H,KA9BwB,mBA+BxBC,QA6B4BwJ,IAtBzB,yDAAP,wDAHG,IAAsCR,MEuB9BrB,CAA6CE,GCzDtD4B,E,kDACF,WAAYpK,GAAQ,IAAD,8BACf,cAAMA,IAEDqK,qBAAuB,EAAKA,qBAAqBlI,KAA1B,gBAHb,E,mEAMK,IACbkB,EAAiBC,KAAKtD,MAAtBqD,cACDyC,EAAO,UAAMC,GAAN,kBAAsC1C,EAAc2C,MAAMC,cAA1D,QACb,OACI,2BACI,sBAAIgD,MAAO,SAAUD,MAAO,CAACsB,UAAW,cAAejH,EAAc6D,aACrE,sBAAI+B,MAAO,UAAW5F,EAAc8D,KAApC,IAA2C9D,EAAcgD,SACzD,gBAACkE,EAAA,EAAD,KACI,gBAACC,EAAA,EAAD,KACI,gBAACC,EAAA,EAAD,KAAK,qBAAGxB,MAAO,UAAU,uBAAKnG,IAAKgD,EAASmB,IAAK5D,EAAc2C,MAAO0E,MAAO,GAAIC,OAAQ,KAApF,IAA4FtH,EAAcuH,KAAK,2BACxF,KAAvBvH,EAAcwH,KAAc,gCAAE,mCAAF,IAAiBxH,EAAcwH,WAAWnB,KAG/E,gBAACc,EAAA,EAAD,KAAK,8CACL,gBAACA,EAAA,EAAD,CAAKxB,MAAO,CAAC8B,YAAa,IAAI,uCAA9B,OAAsDzH,EAAcsB,WAAW8E,kBAC/E,gBAACe,EAAA,EAAD,CAAKxB,MAAO,CAAC8B,YAAa,IAAI,0CAA9B,OAAyDzH,EAAc0H,cAActB,kBACrF,gBAACe,EAAA,EAAD,CAAKxB,MAAO,CAAC8B,YAAa,IAAI,qCAA9B,OAAoDzH,EAAc2H,SAASvB,kBAE3E,gBAACe,EAAA,EAAD,CAAKxB,MAAO,CAACiC,UAAW,GAAIC,aAAc,WACtC,4CACA,gBAAC,EAAD,W,+BAQhB,OACI,uBAAKpC,UAAW,WACXxF,KAAKtD,MAAMqD,cAAgBC,KAAK+G,uBAAyB,qBAAGpB,MAAO,UAAV,iD,GArC7ChH,aAuDdqG,eAbS,SAAC9G,GACrB,MAAO,CACH6B,cAAe7B,EAAM6B,kBAIH,SAACkF,GACvB,MAAO,CACH/H,iBAAkB,SAACC,GAAD,OAAa8H,EAAS/H,EAAiBC,KACzD8B,mBAAoB,kBAAMgG,EH1CvB,CACH7H,KAf4B,6BG4DrB4H,CAA6C8B,GCvC7Ce,E,uKAbP,OACI,gBAACZ,EAAA,EAAD,CAAWa,OAAK,EAACpC,MAAO,CAAE8B,YAAa,EAAGO,aAAc,EAAGC,YAAa,EAAGX,OAAQ,OAAQY,UAAW,SAClG,gBAACf,EAAA,EAAD,KACI,gBAACC,EAAA,EAAD,CAAKe,GAAI,EAAGC,GAAI,EAAGzC,MAAO,CAACqC,aAAc,IAAK,gBAAC,EAAD,OAC9C,gBAACZ,EAAA,EAAD,CAAKe,GAAI,GAAIC,GAAI,GAAIzC,MAAO,CAAC8B,YAAa,EAAGY,WAAY,EAAGhB,MAAO,OAAQC,OAAQ,UAC/E,gBAAC,EAAD,a,GAPF1I,aCGP0J,EARA,WACX,OACI,kBAAC1L,EAAA,EAAD,CAAQC,GAAG,OAAOC,QAAQ,OAAOC,OAAO,KAAKC,OAAQ,UACjD,kBAACJ,EAAA,EAAO2L,KAAR,kCCgBGC,E,uKAdP,OACI,gCACI,gBAACtB,EAAA,EAAD,CAAWa,OAAK,EAACpC,MAAO,CAAE8B,YAAa,EAAGO,aAAc,EAAGK,WAAY,IACnE,gBAACjB,EAAA,EAAD,CAAKzB,MAAO,CAAC8C,KAAM,KAAOC,cAAe,SAAUjB,YAAa,EAAGO,aAAc,EAAGK,WAAY,IAAhG,IAAqG,gBAAC,EAAD,OACrG,gBAACjB,EAAA,EAAD,CAAKzB,MAAO,CAAC8C,KAAM,IAAMC,cAAe,SAAUjB,YAAa,EAAGO,aAAc,EAAGK,WAAY,IAA/F,KAAqG,gBAAC,EAAD,OACrG,gBAACjB,EAAA,EAAD,CAAKzB,MAAO,CAAC8C,KAAM,KAAOC,cAAe,SAAUjB,YAAa,EAAGO,aAAc,EAAGK,WAAY,IAAhG,IAAqG,gBAAC,EAAD,a,GAPvGzJ,a,iCCKX,IAAM+J,EAVb,WACI,IADqB,EACjBA,EAAa,IAAIC,IADA,cAGJ7H,GAHI,IAGrB,2BAAuC,CAAC,IAA/BC,EAA8B,QACnC2H,EAAWE,IAAI7H,EAAKgC,QAAShC,IAJZ,8BAOrB,OAAO2H,EAGgBG,GCHrBC,EAAe,CACjB/I,mBAAeqG,EAEfhB,cAAc,EACdK,gBAAiB,GAEjBxF,YAAQmG,GAGZ,SAAS2C,EAAYrC,EAAM3G,GACvB,IADsC,EAClCiJ,EAAY,IAAIL,IADkB,cAGjBjC,GAHiB,IAGtC,2BAA2B,CAAC,IAClBuC,EADiB,QACSC,kBAEhC,GAAIF,EAAUG,IAAIF,GAAiB,CAC/B,IAAIG,EAAQJ,EAAUxC,IAAIyC,GAC1BG,GAAS,EACTJ,EAAUJ,IAAIK,EAAgBG,QAE9BJ,EAAUJ,IAAIK,EAAgB,IAXA,8BAetC,IAfsC,EAelChJ,EAAS,GAEPoJ,EAAWL,EAAUM,OAAOD,YAjBI,cAmBrBA,GAnBqB,IAmBtC,2BAA2B,CAAC,IAAnBE,EAAkB,QACnBC,EAAS,CACT,QAAWD,EAAK,GAChB,WAAcA,EAAK,IAGvB,GAAIC,EAAOrM,UAAY4C,EAAcgD,SAAW2F,EAAWS,IAAIK,EAAOrM,SAAU,CAC5E,IAAIsM,EAAcC,OAAOC,OAAO,GAAIjB,EAAWlC,IAAIgD,EAAOrM,UAC1DsM,EAAYpI,WAAamI,EAAOI,WAChC3J,EAAOkB,KAAKsI,KA5BkB,8BAoCtC,OAJAxJ,EAAO4J,MAAK,SAACvD,EAAGwD,GACZ,OAAOA,EAAEzI,WAAaiF,EAAEjF,cAGrBpB,EAGJ,IC9CD8J,EAAQC,aD8CS,WAAmC,IAAlC9L,EAAiC,uDAAzB4K,EAAcmB,EAAW,uCACrD,OAAQA,EAAO7M,MACX,IRzD0B,qBQ0DtB,OAAO,eAAIc,EAAX,CAAkB6B,cAAekK,EAAO5M,UAC5C,IR1D4B,uBQ2DxB,OAAO,eAAIa,EAAX,CAAkB6B,mBAAeqG,EAAWnG,YAAQmG,IACxD,IR1DwB,mBQ2DpB,OAAO,eAAIlI,EAAX,CAAkBkH,cAAc,EAAMK,gBAAiB,KAC3D,IR3DyB,oBQ4DrB,OAAO,eAAIvH,EAAX,CAAkBkH,cAAc,EAAOnF,OAAQ8I,EAAYkB,EAAO5M,QAASa,EAAM6B,iBACrF,IR5DwB,mBQ6DpB,OAAO,eAAI7B,EAAX,CAAkBkH,cAAc,EAAOK,gBAAiBwE,EAAO5M,UACnE,QACI,OAAOa,KC3DgBgM,YAAgBC,MAEnDC,IAASC,OACL,kBAAC,IAAD,CAAUN,MAAOA,GACb,kBAAC,IAAMO,WAAP,KACI,kBAAC,EAAD,QAGNhL,SAASiL,eAAe,SXgHxB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.1a06cef7.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import Navbar from \"react-bootstrap/Navbar\";\nimport React from \"react\";\n\nconst Header = (props) => {\n    return (<Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" sticky={\"top\"}>\n        <Navbar.Brand href=\"#home\" bg=\"light\">AirMap</Navbar.Brand>\n    </Navbar>);\n};\n\nexport default Header;\n","import axios from \"axios\";\n\nexport const SET_ACTIVE_AIRPORT = \"SET_ACTIVE_AIRPORT\";\nexport const UNSET_ACTIVE_AIRPORT = \"UNSET_ACTIVE_AIRPORT\";\n\nexport const GET_ROUTES_START = \"GET_ROUTES_START\";\nexport const GET_ROUTES_FINISH = \"GET_ROUTES_FINISH\";\nexport const GET_ROUTES_ERROR = \"GET_ROUTES_ERROR\";\n\nexport function setActiveAirport(airport) {\n    return {\n        type: SET_ACTIVE_AIRPORT,\n        payload: airport\n    }\n}\n\nexport function unsetActiveAirport() {\n    return {\n        type: UNSET_ACTIVE_AIRPORT\n    }\n}\n\nexport function getRoutesStart() {\n    return {\n        type: GET_ROUTES_START,\n    }\n}\n\nexport function getRoutesFinish(data) {\n    return {\n        type: GET_ROUTES_FINISH,\n        payload: data\n    }\n}\n\nexport function getRoutesError(err) {\n    return {\n        type: GET_ROUTES_ERROR,\n        payload: err\n    }\n}\n\nexport function getRouteDataForActiveAirport(airportCode) {\n    const url = process.env.REACT_APP_API_URL;\n\n    return async dispatch => {\n        dispatch(getRoutesStart());\n        try {\n            const res = await axios.get(`${url}/${airportCode}`);\n\n            dispatch(getRoutesFinish(res.data));\n        } catch (err) {\n            let errMsg;\n            if (err.response) {\n                let status = err.response.status;\n\n                if (status === 404) {\n                    errMsg = 'Sorry, no route data found for this airport.'\n                } else if (status === 504) {\n                    errMsg = 'Sorry, the API is unable to respond at the moment. Please try again later.'\n                } else {\n                    errMsg = 'Sorry, we had trouble fetching route data. Please try again later.'\n                }\n            } else {\n                errMsg = 'Sorry, we had trouble fetching route data. Please try again later.'\n            }\n\n            dispatch(getRoutesError(errMsg));\n        }\n\n    }\n}\n","import {CircleMarker, Map as LeafletMap, Marker, Popup, TileLayer} from \"react-leaflet\";\nimport * as React from \"react\";\nimport airportDepartureData from '../airportdeparturedata.json';\nimport {setActiveAirport, unsetActiveAirport} from \"../controller/actions\";\nimport {connect} from \"react-redux\";\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\nimport { GeodesicLine } from 'react-leaflet-geodesic'\n\n\ndelete L.Icon.Default.prototype._getIconUrl;\n\nL.Icon.Default.mergeOptions({\n    iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n    iconUrl: require('leaflet/dist/images/marker-icon.png'),\n    shadowUrl: require('leaflet/dist/images/marker-shadow.png')\n});\n\nconst MIN_ZOOM = 3;\nconst MAX_ZOOM = 10;\nconst CIRCLE_EXPONENT = 0.57;\n\nconst AIRPORT_LIMIT = 50;\n\nconst position = [0, 0];\n\nclass MainMap extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            zoom: MIN_ZOOM,\n            position,\n            loading: true,\n            visibleAirports: [],\n            visibleRoutes: [],\n            vL: 0,\n            rL: MIN_ZOOM*10\n        };\n\n        this.mapRef = React.createRef();\n        this.handlePositionChange = this.handlePositionChange.bind(this);\n        this.updateVisibleAirportsOnMap = this.updateVisibleAirportsOnMap.bind(this);\n        this.renderCircle = this.renderCircle.bind(this);\n        this.renderActiveAirport = this.renderActiveAirport.bind(this);\n        this.unsetActiveAirport = this.unsetActiveAirport.bind(this);\n        this.renderMarkers = this.renderMarkers.bind(this);\n        this.handleZoomChange = this.handleZoomChange.bind(this);\n        this.drawLines = this.drawLines.bind(this);\n    }\n\n    componentDidMount() {\n        const script = document.createElement(\"script\");\n\n        script.src = \"https://cdn.jsdelivr.net/npm/leaflet.geodesic\";\n        script.async = true;\n\n        document.body.appendChild(script);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if ((prevProps.activeAirport && !this.props.activeAirport) || (this.props.activeAirport && prevProps.routes !== this.props.routes)) {\n            this.updateVisibleAirportsOnMap();\n        }\n    }\n\n    handlePositionChange() {\n        if (this.mapRef) {\n            let position = this.mapRef.leafletElement.getCenter();\n\n            this.setState({ position });\n\n            this.updateVisibleAirportsOnMap();\n        }\n    }\n\n    handleZoomChange() {\n        let zoom = this.mapRef.leafletElement.getZoom();\n        let rL = this.calculateRL(zoom);\n\n        this.setState({zoom, rL});\n    }\n\n    updateVisibleAirportsOnMap() {\n        let bounds = this.mapRef.leafletElement.getBounds();\n        let sw = bounds._southWest;\n        let ne = bounds._northEast;\n\n        let visibleAirports = [];\n        let source = (this.props.activeAirport) ? this.props.routes : airportDepartureData;\n\n        if (source) {\n            for (let elem of source) {\n\n                let lng = elem.coordinates[0];\n                let lat = elem.coordinates[1];\n\n                if (lat >= sw.lat && lat <= ne.lat && lng >= sw.lng && lng <= ne.lng) {\n                    visibleAirports.push(elem);\n                }\n\n                if (!this.props.activeAirport && visibleAirports.length === AIRPORT_LIMIT) {\n                    break;\n                }\n            }\n\n            let vL = 0;\n            if (visibleAirports.length > 0) {\n                vL = visibleAirports[0].Departures;\n            }\n\n            this.setState( {visibleAirports, vL} );\n        }\n    }\n\n\n    calculateRL(zoom) {\n        return zoom * 10;\n    }\n\n    drawLines() {\n        let sourceLng = this.props.activeAirport.coordinates[0];\n        let sourceLat = this.props.activeAirport.coordinates[1];\n\n        let colours = ['#ff0000', '#66ff33', '#33ccff'];\n\n        let lines = [];\n\n        for (let i = 0; i < this.state.visibleAirports.length; i++) {\n            let airport = this.state.visibleAirports[i];\n\n            let lng = airport.coordinates[0];\n            let lat = airport.coordinates[1];\n\n            const waypoints = [ [sourceLat, sourceLng], [lat, lng] ];\n\n            const options = {\n                weight: 2,\n                opacity: 0.5,\n                color: colours[i % colours.length]\n            };\n\n            const line = <GeodesicLine positions={waypoints} options={options} />;\n\n            lines.push(line);\n        }\n\n        return lines;\n    }\n\n    renderCircle(airport, representsRoute) {\n        const lng = airport.coordinates[0];\n        const lat = airport.coordinates[1];\n\n        const vC = airport.Departures;\n        const { rL, vL } = this.state;\n\n        const circleRatio = (vC/vL);\n\n        const radius = Math.pow(circleRatio, CIRCLE_EXPONENT) * rL;\n\n        const flagUrl = `${process.env.PUBLIC_URL}/flags/${airport.State.toLowerCase()}.gif`;\n        if (representsRoute) {\n\n            return <CircleMarker center={{lat, lng}}\n                                 color={\"#59AE09\"}\n                                 key={airport.Airport} radius={radius} onClick={(e) => {L.DomEvent.stopPropagation(e);}}\n                                 onMouseOver={(e) => {\n                                     e.target.openPopup();\n                                 }}\n                                 onMouseOut={(e) => {\n                                     e.target.closePopup();\n                                 }}\n            >\n                <Popup closeButton={false}><img src={flagUrl} alt={airport.State.toLowerCase()} /> {`${airport.AirportName} (${airport.Airport}/${airport.iata}) - ${airport.Departures}`}</Popup>\n            </CircleMarker>\n        } else {\n\n            return <CircleMarker center={{lat, lng}}\n                                 color={\"#59AE09\"}\n                                 key={airport.Airport} radius={radius} onClick={(e) => {\n                const position = {lat, lng};\n                this.mapRef.leafletElement.flyTo(position, this.state.zoom, {duration: 0.25});\n                this.props.setActiveAirport(airport);\n                L.DomEvent.stopPropagation(e);\n            }} onMouseOver={(e) => {\n                e.target.openPopup();\n            }} onMouseOut={(e) => {\n                e.target.closePopup();\n            }}\n            >\n                <Popup closeButton={false}><img src={flagUrl} alt={airport.State.toLowerCase()} /> {`${airport.AirportName} (${airport.Airport}/${airport.iata})`}</Popup>\n            </CircleMarker>\n        }\n    }\n\n    renderActiveAirport() {\n        const {activeAirport} = this.props;\n        const lng = activeAirport.coordinates[0];\n        const lat = activeAirport.coordinates[1];\n\n        return <Marker position={{lat, lng}} onClick={e => L.DomEvent.stopPropagation(e)} color={\"red\"} />\n    }\n\n    unsetActiveAirport() {\n        if (this.props.activeAirport) {\n            this.props.unsetActiveAirport();\n        }\n    }\n\n    renderMarkers() {\n        if (this.props.activeAirport) {\n            if (this.props.routes) {\n                const routes = this.state.visibleAirports.map((airport) => {\n                    return this.renderCircle(airport, true);\n                });\n                routes.push(this.renderActiveAirport());\n                let lines = this.drawLines();\n                return routes.concat(lines);\n            }\n            return this.renderActiveAirport();\n        } else {\n\n            return this.state.visibleAirports.map((airport) => {\n                return this.renderCircle(airport, false);\n            });\n        }\n    }\n\n    render() {\n        return (\n            <div><LeafletMap onClick={this.unsetActiveAirport} onZoomEnd={this.handleZoomChange} center={this.state.position} zoom={this.state.zoom} ref={(m) => this.mapRef = m}\n                             onMoveEnd={this.handlePositionChange} whenReady={this.updateVisibleAirportsOnMap} maxBounds={[[-105, -195], [105, 195]]} worldCopyJump={true} >\n                <TileLayer\n                    minZoom={MIN_ZOOM}\n                    detectRetina={true}\n                    maxZoom={MAX_ZOOM}\n                    attribution='&copy; <a href=\"https://stadiamaps.com/\">Stadia Maps</a>, &copy; <a href=\"https://openmaptiles.org/\">OpenMapTiles</a> &copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors <br />\n                Data sources: ICAO iSTARS API Data Service, OpenSky Network'\n                    url=\"https://tiles.stadiamaps.com/tiles/alidade_smooth_dark/{z}/{x}/{y}{r}.png\"\n                />\n                {this.renderMarkers()}\n\n            </LeafletMap>\n            </div>)\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        activeAirport: state.activeAirport,\n        routes: state.routes,\n    };\n};\n\nconst mapDispatchToProps= (dispatch) => {\n    return {\n        setActiveAirport: (airport) => dispatch(setActiveAirport(airport)),\n        unsetActiveAirport: () => dispatch(unsetActiveAirport())\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainMap);\n","import {Table} from \"react-bootstrap\";\nimport * as React from \"react\";\nimport {getRouteDataForActiveAirport} from \"../controller/actions\";\nimport {connect} from \"react-redux\";\nimport Spinner from \"react-bootstrap/Spinner\";\n\nclass RouteDetailTable extends React.Component {\n    componentDidMount() {\n        this.props.getRouteData(this.props.activeAirport.Airport);\n    }\n\n    render() {\n        if (this.props.fetchingData) {\n            return (\n                <Spinner animation=\"border\" role=\"status\">\n                    <span className=\"sr-only\">Loading...</span>\n                </Spinner>\n            )\n        } else if (this.props.fetchingDataErr !== '') {\n            return (\n                <p style={{color: \"red\"}} align={\"center\"}>{this.props.fetchingDataErr}</p>\n            )\n        } else {\n            return (\n                <Table striped bordered hover size=\"sm\" variant={\"dark\"} responsive={true} >\n                    <thead>\n                    <tr>\n                        <th> </th>\n                        <th>Airport</th>\n                        <th>Weekly Departures</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {this.props.routes ? this.props.routes.map((airport, index) => {\n                        const flagUrl = `${process.env.PUBLIC_URL}/flags/${airport.State.toLowerCase()}.gif`;\n                        return (\n                            <tr key={index}>\n                                <td>{index+1}</td>\n                                <td><img src={flagUrl} alt={airport.State} /> {airport.AirportName} ({airport.iata}/{airport.Airport})</td>\n                                <td>{airport.Departures.toLocaleString()}</td>\n                            </tr>\n                        )\n                    }) : undefined}\n                    </tbody>\n                </Table>\n            )\n        }\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        routes: state.routes,\n        activeAirport: state.activeAirport,\n        fetchingData: state.fetchingData,\n        fetchingDataErr: state.fetchingDataErr,\n    };\n};\n\nconst mapDispatchToProps= (dispatch) => {\n    return {\n        getRouteData: (airport) => dispatch(getRouteDataForActiveAirport(airport))\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RouteDetailTable);\n","import * as React from \"react\";\nimport {setActiveAirport, unsetActiveAirport} from \"../controller/actions\";\nimport {connect} from \"react-redux\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport RouteDetailTable from \"./RouteDetailTable\";\n\nclass AirportDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.renderAirportDetails = this.renderAirportDetails.bind(this);\n    }\n\n    renderAirportDetails() {\n        const {activeAirport} = this.props;\n        const flagUrl = `${process.env.PUBLIC_URL}/flags/${activeAirport.State.toLowerCase()}.gif`;\n        return (\n            <div>\n                <h2 align={\"center\"} style={{wordBreak: \"break-all\"}}>{activeAirport.AirportName}</h2>\n                <h4 align={\"center\"}>{activeAirport.iata}/{activeAirport.Airport}</h4>\n                <Container>\n                    <Row>\n                        <Col><p align={\"center\"}><img src={flagUrl} alt={activeAirport.State} width={16} height={11} /> {activeAirport.Name}<br />\n                            {activeAirport.city !== '' ? <><b>City: </b> {activeAirport.city}</> : undefined }</p></Col>\n                    </Row>\n\n                    <Row><h4>2019 statistics</h4></Row>\n                    <Row style={{paddingLeft: 5}}><b>Departures</b>&nbsp;{activeAirport.Departures.toLocaleString()}</Row>\n                    <Row style={{paddingLeft: 5}}><b>International</b>&nbsp;{activeAirport.International.toLocaleString()}</Row>\n                    <Row style={{paddingLeft: 5}}><b>Domestic</b>&nbsp;{activeAirport.Domestic.toLocaleString()}</Row>\n\n                    <Row style={{marginTop: 15, alignContent: \"center\"}}>\n                        <h4>Busiest routes</h4>\n                        <RouteDetailTable />\n                    </Row>\n                </Container>\n            </div>\n        )\n    }\n\n    render() {\n        return (\n            <div className={\"sidebar\"}>\n                {this.props.activeAirport ? this.renderAirportDetails() : <p align={\"center\"}>Click on an airport for more information</p> }\n            </div>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        activeAirport: state.activeAirport\n    };\n};\n\nconst mapDispatchToProps= (dispatch) => {\n    return {\n        setActiveAirport: (airport) => dispatch(setActiveAirport(airport)),\n        unsetActiveAirport: () => dispatch(unsetActiveAirport())\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AirportDetails)\n","import * as React from \"react\";\nimport \"./style.css\"\nimport {Container} from \"react-bootstrap\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport 'leaflet/dist/leaflet.css';\nimport MainMap from \"./MainMap\";\nimport AirportDetails from \"./AirportDetails\";\n\nclass Content extends React.Component {\n    render() {\n        return (\n            <Container fluid style={{ paddingLeft: 0, paddingRight: 0, marginRight: 0, height: \"100%\", overflowY: \"auto\"  }} >\n                <Row>\n                    <Col xs={2} xl={2} style={{paddingRight: 0 }}><AirportDetails /></Col>\n                    <Col xs={10} xl={10} style={{paddingLeft: 0, marginLeft: 0, width: \"100%\", height: \"100vh\"}}>\n                        <MainMap />\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n}\n\nexport default Content;\n","import \"./style.css\";\nimport React from 'react';\nimport Navbar from \"react-bootstrap/Navbar\";\n\nconst Footer = () => {\n    return (\n        <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" sticky={\"bottom\"}>\n            <Navbar.Text>&copy; 2020 Kean Wah Wong</Navbar.Text>\n        </Navbar>\n    )\n}\n\nexport default Footer;\n","import * as React from \"react\";\nimport Header from \"./Header\";\nimport Content from \"./Content\";\nimport Footer from \"./Footer\";\nimport {Container} from \"react-bootstrap\";\nimport Col from \"react-bootstrap/Col\";\n\nclass App extends React.Component {\n    render() {\n        return (\n            <>\n                <Container fluid style={{ paddingLeft: 0, paddingRight: 0, marginLeft: 0}}>\n                    <Col style={{flex: 0.075, flexDirection: \"column\", paddingLeft: 0, paddingRight: 0, marginLeft: 0}}> <Header /></Col>\n                    <Col style={{flex: 0.85, flexDirection: \"column\", paddingLeft: 0, paddingRight: 0, marginLeft: 0}}>  <Content /></Col>\n                    <Col style={{flex: 0.075, flexDirection: \"column\", paddingLeft: 0, paddingRight: 0, marginLeft: 0}}> <Footer /></Col>\n                </Container>\n            </>\n\n\n        );\n    }\n}\n\nexport default App;\n","import airportDepartureData from './airportdeparturedata.json';\n\nfunction getAirportMap() {\n    let airportMap = new Map();\n\n    for (let elem of airportDepartureData) {\n        airportMap.set(elem.Airport, elem);\n    }\n\n    return airportMap;\n}\n\nexport const airportMap =  getAirportMap();\n","import {\n    GET_ROUTES_ERROR,\n    GET_ROUTES_FINISH,\n    GET_ROUTES_START,\n    SET_ACTIVE_AIRPORT,\n    UNSET_ACTIVE_AIRPORT\n} from \"./actions\";\nimport {airportMap} from \"../airportMap\";\n\nconst initialState = {\n    activeAirport: undefined,\n\n    fetchingData: false,\n    fetchingDataErr: '',\n\n    routes: undefined,\n};\n\nfunction processData(data, activeAirport) {\n    let routesMap = new Map();\n\n    for (let response of data) {\n        const arrivalAirport = response.estArrivalAirport;\n\n        if (routesMap.has(arrivalAirport)) {\n            let count = routesMap.get(arrivalAirport);\n            count += 1;\n            routesMap.set(arrivalAirport, count);\n        } else {\n            routesMap.set(arrivalAirport, 1);\n        }\n    }\n\n    let routes = [];\n\n    const iterator = routesMap[Symbol.iterator]();\n\n    for (let item of iterator) {\n        let object = {\n            \"airport\": item[0],\n            \"departures\": item[1]\n        };\n\n        if (object.airport !== activeAirport.Airport && airportMap.has(object.airport)) {\n            let fullAirport = Object.assign({}, airportMap.get(object.airport));\n            fullAirport.Departures = object.departures;\n            routes.push(fullAirport);\n        }\n    }\n\n    routes.sort((a, b) => {\n        return b.Departures - a.Departures;\n    });\n\n    return routes;\n}\n\nexport const reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_ACTIVE_AIRPORT:\n            return {...state, activeAirport: action.payload};\n        case UNSET_ACTIVE_AIRPORT:\n            return {...state, activeAirport: undefined, routes: undefined};\n        case GET_ROUTES_START:\n            return {...state, fetchingData: true, fetchingDataErr: ''};\n        case GET_ROUTES_FINISH:\n            return {...state, fetchingData: false, routes: processData(action.payload, state.activeAirport)};\n        case GET_ROUTES_ERROR:\n            return {...state, fetchingData: false, fetchingDataErr: action.payload};\n        default:\n            return state;\n    }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport App from \"./components/App\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Provider } from 'react-redux'\nimport { applyMiddleware, createStore } from \"redux\";\nimport thunk from 'redux-thunk';\nimport {reducer} from \"./controller/reducer\";\n\n\nconst store = createStore(reducer, applyMiddleware(thunk));\n\nReactDOM.render(\n    <Provider store={store}>\n        <React.StrictMode>\n            <App />\n        </React.StrictMode>\n    </Provider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}